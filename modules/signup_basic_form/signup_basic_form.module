<?php
// $Id$
/**
 * @file signup_basic_form.module
 * Provides a basic signup form pane to collect participant name and phone.
 *
 * Comments a-plenty as this is also the example of how to use the API.
 */

/**
 * Implementation of hook_signup_form_info().
 *
 * This should return an associative array of data about signup form panes.
 */
function signup_basic_form_signup_form_info() {
  return array(
    'basic' => array(
      'label' => 'Name and phone number',
      'description' => 'Collects name and phone number.',
      'callback' => 'signup_basic_form_form',
    ),
    // this is just an extra item to test things.
    'silly' => array(
      'label' => 'Favourite colour',
      'description' => 'Should probably be blue.',
      'callback' => 'signup_basic_form_silly',
    ),
  );
}

// silly! just here for testing!
function signup_basic_form_silly(&$form_state, $node, $signup_type = 'auth') {
  $form['favorite_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Favourite colour'),
    '#size' => 40, '#maxlength' => 64,
    '#required' => TRUE,
  );
  return $form;
}

/**
 * Signup form pane callback for the basic name and phone form.
 *
 * @todo figure out what $signup_type is!!! grep the old code!
 */
function signup_basic_form_form(&$form_state, $node, $signup_type = 'auth') {
  global $user;
  $form = array();

  $form['Name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#size' => 40, '#maxlength' => 64,
    '#required' => TRUE,
  );
  $form['Phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#size' => 40, '#maxlength' => 64,
  );

  // If the user is logged in, fill in their name by default,
  // except in the special case where the admin user is adding other users.
  if ($user->uid && $signup_type != 'admin') {
    $form['Name']['#default_value'] = $user->name;
  }

  return $form;
}